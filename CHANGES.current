Below are the changes for the current release.
See the CHANGES file for changes in older releases.
See the RELEASENOTES file for a summary of changes in each release.

Version 3.0.11 (in progress)
============================

2016-09-09: olly
            [Python] Fix import handling for Python 2.6 to work in a frozen
            application.  Fixes #145, reported by Thomas Kluyver.

2016-09-02: smarchetto
            [Scilab] Pointers are mapped to mlist instead of tlist
            (mlist better for scilab overloading)

2016-09-02: olly
            [PHP] Fix "out" typemap for member function pointers and "in"
            typemap for char INPUT[ANY].

2016-09-01: wsfulton
            [Python] More efficient Python slicing.
            Call reserve for container types that support it to avoid repeated
            memory reallocations for new slices or slices that grow in size.

2016-09-01: wsfulton
            [Python] #771 - Make builtin types hashable by default.
            Default hash is the underlying C/C++ pointer. This matches up with testing for
            equivalence (Py_EQ in SwigPyObject_richcompare) which compares the pointers.

2016-08-22: wsfulton
            [Python] The following builtin slots can be customized like other slots via the
            "python:<x>" and "python:slot" features where <x> is the appropriate slot name:
              tp_allocs
              tp_bases
              tp_basicsize
              tp_cache
              tp_del
              tp_dealloc
              tp_flags
              tp_frees
              tp_getset
              tp_is_gc
              tp_maxalloc
              tp_methods
              tp_mro
              tp_new
              tp_next
              tp_prev
              tp_richcompare
              tp_subclasses
              tp_weaklist
              was_sq_ass_slice
              was_sq_slice

            A few documentation improvements for slot customization.

2016-08-09: joequant
            [R] Patch #765 Fix extern "C" header includes for C++ code.

2016-08-05: olly
            [xml] Fix how the output filename is built to avoid problems when
            it contains the embedded strings ".c", ".cpp" or ".cxx".
            Fixes #540 reported by djack42.

2016-07-01: wsfulton
            Fix corner case of wrapping std::vector of T pointers where a pointer to a pointer of T
            also exists in the wrapped code. SF Bug 2359417 (967).

2016-06-26: wkalinin
            [Java, C#] Patch #681 Fix seg fault when ignoring nested classes.

2016-06-25: mromberg
            [Python] #711 Fix -castmode and conversion of signed and unsigned integer types.
            See 2015-12-23 CHANGES entry for details of these improvements when they were
            implemented for the default options (ie not using -castmode).

2016-06-25: ahnolds
            Patch #730 - Fix %implicitconv for overloaded functions when using
            -castmode or -fastdispatch options.

            The result is that in all overload cases where there are multiple possibilities
            with the same number of arguments, the dispatch function will first check for
            exact (aka non implicit) matches, and then subsequently check for implicit
            casting matches. This was already happening in the normal dispatch situation,
            and in the -fastdispatch case two passes through the candidates were happening,
            just with SWIG_POINTER_IMPLICIT_CONV always set. After this patch, it is not set
            on the first pass, and then set on the second pass.

2016-06-25: liorgold
            Patch #727 - Add support for C++11 type aliasing.
