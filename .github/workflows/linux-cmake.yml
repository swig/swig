# linux-cmake.yml
#
# GitHub Actions workflow for SWIG CMake build on Linux.
#

name: linux-cmake

# same triggers as the other workflows
on:
  push:
    paths-ignore:
      - 'CHANGES*'
      - 'Doc/**'
      - 'appveyor.yml'
  pull_request:
    branches: master
    paths-ignore:
      - 'CHANGES*'
      - 'Doc/**'
      - 'appveyor.yml'

# same permissions as other worflows
permissions:
  contents: read

# only defines one job, the "cmake" job
jobs:
  cmake:
    runs-on: ${{ matrix.os }}
    name: CMake ${{ matrix.os }}

    strategy:
      matrix:
        # note: -arm variants exist for arm64 testing
        os: [ubuntu-22.04, ubuntu-24.04]
        # note: can add Ninja too for ubuntu runners. 'Ninja Multi-Config' can
        # be used for multi-config testing, but requires some changes to how
        # CMake/CTest are being invoked in the below steps

    env:
      # install prefix for SWIG CI build
      SWIG_INSTALL_PREFIX: '${{ github.workspace }}/install'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        # if fetch-depth is 0 or >1 progress output will clutter the log
        show-progress: false

    # note: same steps as in linux.yml
    - name: Machine Info
      run: |
          echo "nproc..."
          nproc --all
          echo "uname..."
          uname --all
          echo "meminfo..."
          cat /proc/meminfo
          echo "lsb-release..."
          cat /etc/lsb-release

    # note: bison is pre-installed via APT already for Ubuntu runners
    - name: Install Dependencies
      run: |
          sudo apt install libpcre2-dev

    # single-config build configuration (uses default single-config generator)
    # note: no need to use PCRE2_ROOT as PCRE2 is installed via APT
    - name: Configure
      run: |
          cmake --version
          cmake -S . -B build \
            -DCMAKE_INSTALL_PREFIX=${{ env.SWIG_INSTALL_PREFIX }} \
            -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build -j

    # note: can use -j$(nproc) for parallel testing
    - name: Test
      run: ctest --test-dir build -V --output-on-failure

    - name: Install
      run: |
          cmake --install build
          ${{ env.SWIG_INSTALL_PREFIX }}/bin/swig -version
