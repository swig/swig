name: Detect file changes
on:
  workflow_call:
    inputs:
      languages:
        description: Swig languages
        required: true
        type: string
    outputs:
      docs_changed:
        description: Documentation changed
        value: ${{ jobs.change-detection.outputs.docs_changed }}
      base_changed:
        description: Base Swig files changed
        value: ${{ jobs.change-detection.outputs.base_changed }}
      langs:
        description: Swig languages affected
        value: ${{ jobs.change-detection.outputs.langs }}


jobs:
  change-detection:
    name: Gather commit changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
      - name: Install fmf
        run: python3 -m pip install fmf
      - name: Gather variants
        run: |
          # Create the base yaml file for tj-actions/changed-files
          cat <<EOF > changed-files.yaml
          docs:
            - Doc/**
          base:
            - Source/**
            - Lib/std/**
            - Lib/typemaps/**
            - Lib/xml/**
            - Lib/*
            - Examples/Makefile.in
            - Examples/test-suite/*
            - Examples/test-suite/errors/*
          EOF
          
          # Append each language data
          for lang in $(echo '${{ inputs.languages }}' | jq -r .[]); do
            # normalize the language for tj-actions/changed-files to avoid `/`
            normal_lang=$(echo $lang | sed 's|/|_|')
            # Note: this one does not work with indentation :(
            cat <<EOF >> changed-files.yaml
          $normal_lang:
            - Lib/$lang/**
            - Examples/$lang/**
            - Examples/test-suite/$lang/**
          EOF
            # Check if there are extra paths to run
            if [ ! -z "$(fmf show --path ./Lib --name=^/${lang}\$ --key=extra-paths)" ]; then
              extra_paths=$(fmf show --path ./Lib --name=^/${lang}\$ --format='{0}' --value='data["extra-paths"]')
              extra_paths=$(python3 -c "import json; print(json.dumps($extra_paths))")
              yq -i ".${normal_lang} |= . + ${extra_paths}" ./changed-files.yaml
            fi
          done
          
          echo "::group::Final changed-files.yaml:"
          cat changed-files.yaml
          echo "::endgroup::"
      - name: Check changed files
        uses: tj-actions/changed-files@v39
        id: changed-files
        with:
          files_yaml_from_source_file: changed-files.yaml
          json: true
          write_output_files: true
      - name: Gather outputs
        id: changed-output
        run: |
          echo "::group::tj-actions/changed-files"
          grep -R '' .github/outputs/*.json
          echo "::endgroup::"
          # Set the basic docs/base flags
          echo "base=${{ steps.changed-files.outputs.base_any_modified }}" >> $GITHUB_OUTPUT
          echo "docs=${{ steps.changed-files.outputs.docs_any_modified }}" >> $GITHUB_OUTPUT
          
          # Gather all languages that have changed
          langs="[]"
          for lang in $(echo '${{ inputs.languages }}' | jq -r .[]); do
            # normalize the language for tj-actions/changed-files to avoid `/`
            normal_lang=$(echo $lang | sed 's|/|_|')
            if [[ "$(cat .github/outputs/${normal_lang}_any_modified.json | jq .)" == "true" ]]; then
              langs="$(echo $langs | jq -c ". += [\"$lang\"]")"
            fi
          done
          echo "langs=$langs" >> $GITHUB_OUTPUT
          
          # Print debug
          echo "::group::Outputs"
          cat $GITHUB_OUTPUT
          echo "::endgroup::"
    outputs:
      base_changed: ${{ steps.changed-output.outputs.base }}
      docs_changed: ${{ steps.changed-output.outputs.docs }}
      langs: ${{ steps.changed-output.outputs.langs }}
